"use strict";(self.webpackChunkbot_method_documentation=self.webpackChunkbot_method_documentation||[]).push([[107],{9579:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=t(5893),i=t(1151);const r={},s="Creation",a={id:"Creation",title:"Creation",description:"Overview",source:"@site/docs/1.Creation.md",sourceDirName:".",slug:"/Creation",permalink:"/bot-method-documentation/docs/Creation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"defaultSidebar",next:{title:"Implementation",permalink:"/bot-method-documentation/docs/Implementation"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"ConvertAPI",id:"convertapi",level:3},{value:"Echo Bot",id:"echo-bot",level:3},{value:"Code to Replace",id:"code-to-replace",level:4},{value:"Bot Framework Emulator",id:"bot-framework-emulator",level:3},{value:"Windows",id:"windows",level:4},{value:"Ubuntu",id:"ubuntu",level:4},{value:"Mac",id:"mac",level:4},{value:"Running Bot Framework Emulator",id:"running-bot-framework-emulator",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"creation",children:"Creation"}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"This bot is designed to facilitate the conversion of .csv files to .xlsx with a single click, integrating directly into the Microsoft Teams environment."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Python"}),": You will need Python 3.10 or higher to run the bot. You can download it from ",(0,o.jsx)(n.a,{href:"https://www.python.org/downloads/",children:"python.org"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Microsoft Teams"}),": You must have access to Microsoft Teams, where the bot will be integrated and used. You can sign in from ",(0,o.jsx)(n.a,{href:"https://www.microsoft.com/en-us/microsoft-teams/log-in",children:"microsoft-teams.com"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"ConvertAPI"}),": This API is used to quickly convert CSV files to Excel. You can sign up at ",(0,o.jsx)(n.a,{href:"https://www.convertapi.com/csv-to-xlsx#snippet=python",children:"convertapi.com"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Echo Bot"}),": The ",(0,o.jsx)(n.code,{children:"Echo Bot"})," is an example bot from the ",(0,o.jsx)(n.code,{children:"Microsoft Bot Framework"})," that serves as a starting point for building the bot."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Bot Framework Emulator"}),": Necessary for locally testing your bot and ensuring smooth user interactions. You can download it from ",(0,o.jsx)(n.a,{href:"https://github.com/Microsoft/BotFramework-Emulator/releases/tag/v4.3.3",children:"Bot Framework Emulator"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Azure"}),": Azure is used to host the bot. You can sign up at ",(0,o.jsx)(n.a,{href:"https://azure.microsoft.com/en-us/",children:"azure.com"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Developer Portal"}),": You will use Microsoft's Developer Portal to manage and deploy your bot application in Teams."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.h3,{id:"convertapi",children:"ConvertAPI"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Go to ",(0,o.jsx)(n.a,{href:"https://www.convertapi.com/csv-to-xlsx#snippet=python",children:"convertapi.com"}),", register, and navigate to Profile>Authentication and copy your API Secret (you will need it in the next step)."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"echo-bot",children:"Echo Bot"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Clone the Microsoft BotBuilder Samples repository with the following command:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"git clone https://github.com/microsoft/BotBuilder-Samples.git\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd BotBuilder-Samples/samples/python/02.echo-bot\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Copy the following content into the ",(0,o.jsx)(n.code,{children:"requirements.txt"})," file:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"aiohttp\npython-dotenv\nbotbuilder-core\nbotbuilder-schema\nconvertapi\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Install the libraries with:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pip install -r requirements.txt\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Create a .env file with the variable ",(0,o.jsx)(n.code,{children:"API_SECRET"})," and assign the API from ",(0,o.jsx)(n.code,{children:"convertapi.com"}),"\n",(0,o.jsx)(n.img,{alt:"Alt text",src:t(9801).Z+"",width:"859",height:"474"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"API_SECRET=123 \n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Open file ",(0,o.jsx)(n.code,{children:"echo_bot.py"})]}),"\n",(0,o.jsxs)(n.li,{children:["The code to replace already contains the use of ",(0,o.jsx)(n.code,{children:"API_SECRET"})," for the environment variable"]}),"\n",(0,o.jsx)(n.li,{children:"Replace its content with the following:"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"code-to-replace",children:"Code to Replace"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from botbuilder.core import ActivityHandler, TurnContext, MessageFactory\nfrom botbuilder.schema import AttachmentData, ChannelAccount, Attachment, CardAction, ActionTypes, HeroCard\nfrom dotenv import load_dotenv\nimport os\nimport aiohttp\nimport convertapi\nload_dotenv()\n\n# Configura tu clave secreta de ConvertAPI\nconvertapi.api_secret = os.getenv("API_SECRET")\n\nclass MyBot(ActivityHandler):\n\n    async def on_message_activity(self, turn_context: TurnContext):\n        print("on_message_activity")\n        if turn_context.activity.attachments and len(turn_context.activity.attachments) > 0:\n            attachment = turn_context.activity.attachments[0]\n            if attachment.content_type == "text/csv":\n                await turn_context.send_activity("Recibido el archivo .csv")\n                await self.process_csv_attachment(attachment, turn_context)\n            else:\n                await turn_context.send_activity("Por favor, env\xedame un archivo .csv.")\n        else:\n            await turn_context.send_activity("Por ahora solo puedo recibir archivos .csv.")\n\n    async def convert_csv_to_xlsx(self, local_csv_path):\n        print("convert_csv_to_xlsx")\n        # Hacer la solicitud a ConvertAPI y obtener el resultado\n        conversion_result = convertapi.convert(\n            \'xlsx\', {\n                \'File\': local_csv_path,\n                \'Delimiter\': \',\'\n            },\n            from_format=\'csv\'\n        )\n        \n        print("Archivo convertido: " + conversion_result.file.url)\n        return conversion_result.file.url\n\n    async def download_file(self, url):\n        print("download_file")\n        async with aiohttp  .ClientSession() as session:\n            async with session.get(url) as response:\n                if response.status == 200:\n                    file_path = \'downloads/\' + url.split(\'/\')[-1]\n                    with open(file_path, \'wb\') as f:\n                        f.write(await response.read())\n                    return file_path\n\n    async def _download_attachment_and_save(self, attachment: AttachmentData):\n        print("_download_attachment_and_save")\n        # Comprobar si el directorio de descargas existe, si no, crearlo\n        download_folder = "downloads"\n        if not os.path.exists(download_folder):\n            os.makedirs(download_folder)\n\n        # Extraer el nombre del archivo del URL\n        file_name = attachment.name if attachment.name else attachment.content_url.split("/")[-1]\n        file_path = os.path.join(download_folder, file_name)\n\n        # Descargar el archivo\n        async with aiohttp.ClientSession() as session:\n            async with session.get(attachment.content_url) as response:\n                if response.status == 200:\n                    with open(file_path, "wb") as file:\n                        file.write(await response.read())\n\n        return file_path\n\n    async def _send_excel_file(self, turn_context: TurnContext, file_url: str, file_name: str):\n        # Crear una tarjeta con un bot\xf3n de descarga\n        print("_send_excel_file")\n        card = HeroCard(\n            title="Archivo Convertido",\n            subtitle="Haz clic en el bot\xf3n de abajo para descargar el archivo Excel.",\n            buttons=[CardAction(\n                type=ActionTypes.open_url,\n                title="Descargar Excel",\n                value=file_url\n            )]\n        )\n\n        attachment = Attachment(\n            content_type="application/vnd.microsoft.card.hero",\n            content=card\n        )\n\n        await turn_context.send_activity(MessageFactory.attachment(attachment))\n\n    async def on_members_added_activity(self, members_added: ChannelAccount, turn_context: TurnContext):\n        print("on_members_added_activity")\n        for member_added in members_added:\n            if member_added.id != turn_context.activity.recipient.id:\n                await turn_context.send_activity("Bienvenido, enviame un archivo .csv.")\n\n    async def process_csv_attachment(self, attachment: AttachmentData, turn_context: TurnContext):\n        print("process_csv_attachment")\n\n        local_csv_path = await self._download_attachment_and_save(attachment)\n        xlsx_url = await self.convert_csv_to_xlsx(local_csv_path)\n        print("Archivo convertido: " + xlsx_url)\n\n        if xlsx_url:\n            local_xlsx_path = await self.download_file(xlsx_url)\n            await turn_context.send_activity("Tu archivo ha sido convertido con \xe9xito.")\n            await self._send_excel_file(turn_context, xlsx_url, "converted.xlsx")\n        else:\n            await turn_context.send_activity("Hubo un problema al convertir el archivo, intenta de nuevo.")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"bot-framework-emulator",children:"Bot Framework Emulator"}),"\n",(0,o.jsxs)(n.p,{children:["Download the version that suits your operating system from the ",(0,o.jsx)(n.a,{href:"https://github.com/Microsoft/BotFramework-Emulator/releases/tag/v4.3.3",children:"Bot Framework Emulator"})," site."]}),"\n",(0,o.jsx)(n.p,{children:"To work with the Bot Framework Emulator on different operating systems, follow the specific instructions for each one."}),"\n",(0,o.jsx)(n.h4,{id:"windows",children:"Windows"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Run the installer and follow the instructions."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"ubuntu",children:"Ubuntu"}),"\n",(0,o.jsx)(n.p,{children:"Give execution permissions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"chmod 700 BotFramework-Emulator-4.3.3-linux-x86_64.AppImage\n"})}),"\n",(0,o.jsx)(n.p,{children:"Run Bot Framework Emulator"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"./BotFramework-Emulator-4.3.3-linux-x86_64.AppImage &\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"mac",children:"Mac"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Once downloaded, locate the ",(0,o.jsx)(n.code,{children:".dmg"})," file in your downloads folder and open it with a double click."]}),"\n",(0,o.jsx)(n.li,{children:"Drag the Bot Framework Emulator icon to your Applications folder to install it."}),"\n",(0,o.jsx)(n.li,{children:"Open the emulator from the Applications folder."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["Once open, you will see a screen like this:\n",(0,o.jsx)(n.img,{alt:"Alt text",src:t(8194).Z+"",width:"1401",height:"959"})]}),"\n",(0,o.jsx)(n.h3,{id:"running-bot-framework-emulator",children:"Running Bot Framework Emulator"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Click on ",(0,o.jsx)(n.code,{children:"Open Bot"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Alt text",src:t(1355).Z+"",width:"823",height:"556"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Now go back to our ",(0,o.jsx)(n.code,{children:"echo bot"}),". Navigate to the folder ",(0,o.jsx)(n.code,{children:"BotBuilder-Samples/samples/python/02.echo-bot"}),"\nand run the bot with the following command:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"python3 app.py\n"})}),"\n",(0,o.jsx)(n.p,{children:"Once executed, you will see a screen like this:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Alt text",src:t(4217).Z+"",width:"939",height:"157"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Return to ",(0,o.jsx)(n.code,{children:"Bot Framework Emulator"})," and in Bot URL, enter the previous URL with the indicated suffix and Connect."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Alt text",src:t(9078).Z+"",width:"698",height:"504"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Once connected, you can now interact with the Bot locally."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Alt text",src:t(3495).Z+"",width:"1088",height:"876"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},9801:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/image-1-56a460dbd024b40a1a62ad57c490bc10.png"},8194:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/image-2-b3ea2319e8ae210b606d154106b7d1fc.png"},1355:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/image-3-4bd7d9553b44da436d776622b71a42f1.png"},4217:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/image-4-2dd12e7d5be99ee4646d4346b683a735.png"},9078:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/image-5-99290d7334ed78ccae22b543ed4695e4.png"},3495:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/image-6-50ca9e8d4a6d3b184d1c915c9085c580.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var o=t(7294);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);